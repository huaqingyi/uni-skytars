{"version":3,"sources":["http/http.ts"],"names":[],"mappings":"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","file":"../../http/http.js","sourcesContent":["import { isString, map, mergeWith } from 'lodash';\nimport { HTTPInterceptor } from './interceptors';\nimport { HTTPConfiguration, HTTPResponse, Method } from './types';\n\nexport class HTTP {\n    public static create(config: HTTPConfiguration = {}) {\n        return new HTTP(config);\n    }\n\n    public interceptors: HTTPInterceptor;\n\n    constructor(private config: HTTPConfiguration = {}) {\n        this.interceptors = new HTTPInterceptor();\n    }\n\n    private async getConfig(config: HTTPConfiguration = {}, _url?: string): Promise<UniApp.RequestOptions & { cancelToken: (cancal: UniApp.RequestTask) => any }> {\n        if (isString(_url)) config.url = _url;\n        const mconfig: HTTPConfiguration = mergeWith({}, { ...this.config }, config);\n        let uconfig: HTTPConfiguration = {\n            url: mconfig.url,\n            data: mconfig.data,\n            header: mconfig.headers,\n            method: mconfig.method,\n            timeout: mconfig.timeout,\n            responseType: mconfig.responseType,\n            withCredentials: mconfig.withCredentials,\n            cancelToken: mconfig.cancelToken,\n        };\n        await Promise.all(\n            map(this.interceptors._request, async (fn) => {\n                uconfig = await fn(uconfig);\n                return uconfig;\n            })\n        );\n        const baseURL = mconfig.baseURL?.slice(-1) === '/' ? mconfig.baseURL.slice(0, -1) : mconfig.baseURL;\n        const url = [`${baseURL}/${config.url?.indexOf('/') === 0 ? config.url.slice(1) : config.url}`];\n        url.push(map(config.params, (value, field) => `${field}=${value}`).join('&'));\n        let joined = '?';\n        if (encodeURI(config.url || '').includes('?')) joined = '&';\n        return { ...uconfig, url: encodeURI(url.join(joined)) } as any;\n    }\n\n    public async success(response: HTTPResponse) {\n        let resp: any = { ...response };\n        await Promise.all(\n            map(this.interceptors._response, (fn) => {\n                return (resp = fn(resp));\n            })\n        );\n        return resp;\n    }\n\n    public async request<T = any, R = HTTPResponse<T>, D = any>(config: HTTPConfiguration<D>): Promise<R> {\n        const { cancelToken, ...configuration } = await this.getConfig(config);\n        return new Promise((r, fail) => {\n            const task = uni.request({\n                ...configuration,\n                fail,\n                success: async (response) => {\n                    return r(await this.success(response));\n                },\n            });\n            cancelToken && cancelToken(task);\n        });\n    }\n\n    public get<T = any, R = HTTPResponse<T>, D = any>(url: string, config?: HTTPConfiguration<D>): Promise<R> {\n        return this.request({ ...(config || {}), url, method: Method.GET });\n    }\n\n    public post<T = any, R = HTTPResponse<T>, D = any>(url: string, data?: D, config?: HTTPConfiguration<D>): Promise<R> {\n        return this.request({ ...(config || {}), url, method: Method.POST });\n    }\n\n    public put<T = any, R = HTTPResponse<T>, D = any>(url: string, data?: D, config?: HTTPConfiguration<D>): Promise<R> {\n        return this.request({ ...(config || {}), url, method: Method.PUT });\n    }\n\n    public delete<T = any, R = HTTPResponse<T>, D = any>(url: string, config?: HTTPConfiguration<D>): Promise<R> {\n        return this.request({ ...(config || {}), url, method: Method.DELETE });\n    }\n\n    public options<T = any, R = HTTPResponse<T>, D = any>(url: string, config?: HTTPConfiguration<D>): Promise<R> {\n        return this.request({ ...(config || {}), url, method: Method.OPTIONS });\n    }\n}\n\nexport const create = HTTP.create;\n"]}