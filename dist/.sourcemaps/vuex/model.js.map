{"version":3,"sources":["vuex/model.ts"],"names":[],"mappings":";;;;AAAA,iEAA8F;AAC9F,6BAAiD;AAEjD,iCAAoC;AACpC,iEAAuC;AAEvC;IAA4D,sCAAQ;IAApE;;IAOA,CAAC;IAJG,qCAAqC;IACvB,iBAAM,GAApB,UAAqB,QAA+C;QAChE,OAAO,UAAG,IAAI,CAAC,EAAE,cAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAE,CAAC;IAC/C,CAAC;IACL,iBAAC;AAAD,CAPA,AAOC,CAP2D,mCAAQ,GAOnE;AAPY,gCAAU;AAavB;IAkBI,eAAY,KAAc;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,YAAC,CAAC,EAAE,CAAC,CAAC;YAChC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;SACvB;QACD,OAAO,KAAK,CAAC,MAAM,CAAC;IACxB,CAAC;IApBa,aAAO,GAArB,UAAyB,OAA0B;QAC/C,IAAI,CAAE,OAAe,CAAC,EAAE,EAAE;YACrB,OAAe,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACrG;QAEA,OAAe,CAAC,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAA,YAAG,EAAC,IAAA,cAAK,EAAC,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC;YACpE,OAAe,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAA,+BAAO,EAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;IACpF,CAAC;IAYM,mBAAG,GAAV,UAAiC,WAA6B;QAC1D,OAAO,IAAA,kCAAS,EAAC,WAAW,CAAC,CAAC;IAClC,CAAC;IACL,YAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,sBAAK;AAqClB,KAAK,CAAC,OAAO,GAAG,UAAC,GAAe,EAAE,OAAgB;IAC9C,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;IACjC,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;AACvC,CAAC,CAAC;AAEF,SAAgB,QAAQ,CAAuB,WAA6B;IACxE,OAAO,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACxC,CAAC;AAFD,4BAEC","file":"../../vuex/model.js","sourcesContent":["import { VuexModule as VxModule, Module as VModule, getModule } from 'vuex-module-decorators';\nimport { Module as Mod, Store as S } from 'vuex';\nimport Vue, { PluginFunction } from 'vue';\nimport { map, merge } from 'lodash';\nexport * from 'vuex-module-decorators';\n\nexport class VuexModule<S = ThisType<any>, R = any> extends VxModule {\n    public static id: string;\n    public static keys: { [x: string]: string };\n    // tslint:disable-next-line:ban-types\n    public static action(callback: (model: any & VuexModule) => Function) {\n        return `${this.id}/${callback(this.keys)}`;\n    }\n}\n\ndeclare type ConstructorOf<C> = {\n    new (...args: any[]): C;\n};\n\nexport class Store {\n    public static _store: Store;\n    public static install: PluginFunction<S<any>>;\n\n    public static Modulee<S>(options: any & Mod<S, any>): any {\n        if (!(options as any).id) {\n            (options as any).id = Number(Math.random().toString().substring(3, 10) + Date.now()).toString(36);\n        }\n\n        (options as any).keys = {};\n        map(merge({}, options.actions, options.mutations, options.getters), (o, i) => {\n            (options as any).keys[i] = i;\n        });\n        VModule({ dynamic: true, store: new Store().store, name: options.id })(options);\n    }\n\n    public store!: S<any>;\n\n    constructor(store?: S<any>) {\n        if (!Store._store) {\n            this.store = store || new S({});\n            Store._store = this;\n        }\n        return Store._store;\n    }\n\n    public get<M extends VuexModule>(moduleClass: ConstructorOf<M>) {\n        return getModule(moduleClass);\n    }\n}\n\ndeclare module 'vue/types/vue' {\n    interface Vue {\n        $store: S<any>;\n    }\n}\n\nStore.install = (app: typeof Vue, options?: S<any>) => {\n    const store = new Store(options);\n    app.prototype.$store = store.store;\n};\n\nexport function useStore<M extends VuexModule>(moduleClass: ConstructorOf<M>) {\n    return new Store().get(moduleClass);\n}\n"]}